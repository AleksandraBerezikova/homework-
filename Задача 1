
#include <iostream>
using namespace std;

int delete_duplicates(int n, int* v)
{
	if(n == 0)
	{
    return 0;
	}

	int* duplicates = new int[n];
	int* temp = new int[n];

	for(int i = 0; i < n; ++i)
	{
		duplicates[i] = v[0];
	}

	int dupl_size = 1;

	int new_arr_size = 1;

	temp[0] = v[0];


	for(int i = 1; i < n; ++i)
	{
		bool is_duplicate = false;
		for (int j = 0; j < dupl_size; j++)
		{
			if(v[i] == duplicates[j])
			{
				is_duplicate = true;
			}
		}
		if(!is_duplicate)
		{
			duplicates[dupl_size] = v[i];
			temp[new_arr_size] = v[i];
			dupl_size++;
			new_arr_size++;
		}
	}

	int* new_v = new int[new_arr_size];
	for(int i = 0; i < new_arr_size; ++i)
	{
		new_v[i] = temp[i];
	}

	for(int i = 0; i < new_arr_size; ++i)
	{
		v[i] = new_v[i];
	}

	return new_arr_size;
}

int main()
{
	int n;
	cin >> n;

	int* Array = new int[n];

	for(int i = 0; i < n; ++i)
	{
		cin >> Array[i];
	}

	int new_size = delete_duplicates(n, Array);

	for(int i = 0; i < new_size; ++i)
	{
		cout << Array[i] << " ";
	}
	cout << endl;

	return 0;
}

